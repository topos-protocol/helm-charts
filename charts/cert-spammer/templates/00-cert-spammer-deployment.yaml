apiVersion: batch/v1
kind: Job
metadata:
  name: cert-spammer
  labels:
    app: cert-spammer
spec:
  completions: {{ $.Values.replicas }}
  parallelism: {{ $.Values.replicas }}
  completionMode: Indexed
  template:
    metadata:
      labels:
        stack: tce
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: stack
                    operator: In
                    values:
                      - tce
              topologyKey: "kubernetes.io/hostname"
      restartPolicy: Never
      containers:
        - name: spam
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          args: ["network", "spam", "--target-nodes-path", "/tmp/shared/peer_nodes.json"]
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /tmp/shared
              name: shared
          env:
            - name: RUST_LOG
              value: info

            - name: TOPOS_NETWORK_SPAMMER_CERT_PER_BATCH
              value: "{{ $.Values.env.TOPOS_NETWORK_SPAMMER_CERT_PER_BATCH }}"
            - name: TOPOS_NETWORK_SPAMMER_BATCH_INTERVAL
              value: "{{ $.Values.env.TOPOS_NETWORK_SPAMMER_BATCH_INTERVAL }}"
            {{ if $.Values.env.TOPOS_NETWORK_SPAMMER_NUMBER_OF_BATCHES }}
            - name: TOPOS_NETWORK_SPAMMER_NUMBER_OF_BATCHES
              value: "{{ $.Values.env.TOPOS_NETWORK_SPAMMER_NUMBER_OF_BATCHES }}"
            {{ end }}
            - name: TOPOS_NETWORK_SPAMMER_NUMBER_OF_SUBNETS
              value: "{{ $.Values.env.TOPOS_NETWORK_SPAMMER_NUMBER_OF_SUBNETS }}"
            - name: TOPOS_NETWORK_SPAMMER_LOCAL_KEY_SEED
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['batch.kubernetes.io/job-completion-index']

            - name: OTLP_BATCH_SCHEDULED_DELAY
              value: "{{ $.Values.env.OTLP_BATCH_SCHEDULED_DELAY }}"
            - name: OTLP_BATCH_MAX_CONCURRENT_EXPORTS
              value: "{{ $.Values.env.OTLP_BATCH_MAX_CONCURRENT_EXPORTS }}"
            - name: OTLP_BATCH_MAX_EXPORTER_BATCH_SIZE
              value: "{{ $.Values.env.OTLP_BATCH_MAX_EXPORTER_BATCH_SIZE }}"
            - name: OTLP_BATCH_EXPORT_TIMEOUT
              value: "{{ $.Values.env.OTLP_BATCH_EXPORT_TIMEOUT }}"
            - name: OTLP_BATCH_MAX_QUEUE_SIZE
              value: "{{ $.Values.env.OTLP_BATCH_MAX_QUEUE_SIZE }}"
            - name: OTEL_EXPORTER_OTLP_COMPRESSION
              value: "{{ $.Values.env.OTEL_EXPORTER_OTLP_COMPRESSION }}"
            - name: OTEL_EXPORTER_OTLP_TIMEOUT
              value: "{{ $.Values.env.OTEL_EXPORTER_OTLP_TIMEOUT }}"

      volumes:
      - name: shared
        persistentVolumeClaim:
          claimName: shared
